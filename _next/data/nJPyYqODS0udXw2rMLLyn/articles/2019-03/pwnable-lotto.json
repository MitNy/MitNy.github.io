{"pageProps":{"post":{"slug":"2019-03-18-pwnable-lotto","content":"\n![](/assets/posts/pwnkr/lotto.png)\n\nlotto - 2pt\n코드가 좀 길어서 어려워보일 수도 있지만 일부분만 봐도 풀 수 있다.\n\n```c\nunsigned char submit[6];\n\nvoid play(){\n\n        int i;\n        printf(\"Submit your 6 lotto bytes : \");\n        fflush(stdout);\n\n        int r;\n        r = read(0, submit, 6);\n\n        printf(\"Lotto Start!\\n\");\n        //sleep(1);\n\n        // generate lotto numbers\n        int fd = open(\"/dev/urandom\", O_RDONLY);\n        if(fd==-1){\n                printf(\"error. tell admin\\n\");\n                exit(-1);\n        }\n        unsigned char lotto[6];\n        if(read(fd, lotto, 6) != 6){\n                printf(\"error2. tell admin\\n\");\n                exit(-1);\n        }\n        for(i=0; i<6; i++){\n                lotto[i] = (lotto[i] % 45) + 1;         // 1 ~ 45\n        }\n        close(fd);\n\n        // calculate lotto score\n        int match = 0, j = 0;\n        for(i=0; i<6; i++){\n                for(j=0; j<6; j++){\n                        if(lotto[i] == submit[j]){\n                                match++;\n                        }\n                }\n        }\n\n        // win!\n        if(match == 6){\n                system(\"/bin/cat flag\");\n        }\n        else{\n                printf(\"bad luck...\\n\");\n        }\n\n}\n\n```\n\n- 유저로부터 6 bytes를 읽어들이고 6개의 랜덤 값을 1~45까지의 수로 만들어 lotto 배열에 저장한다.\n- submit 배열이 char 타입이기 때문에 1~45까지의 수를 ASCII 코드표를 참고해 입력해야 한다.\n- 이중 for문으로 총 36번을 도는데 lotto 배열에 있는 랜덤 값과 유저 입력값 중 한 개라도 일치하면 match가 증가한다.\n\n![](/assets/posts/pwnkr/asciicode.png)\n\n나는 &(38)를 이용해 6자리를 입력해봤다.\n\n![](/assets/posts/pwnkr/lotto_flag.png)\n\n두 번만에 플래그가 떴다!\n\n`sorry mom... I FORGOT to check duplicate numbers... :(`\n\n","layout":"post","title":"[Pwnable.kr] lotto","categories":["Pwnable.kr"],"excerpt":" ","comments":true,"share":true,"tags":["pwnable.kr","write-up"]}},"__N_SSG":true}