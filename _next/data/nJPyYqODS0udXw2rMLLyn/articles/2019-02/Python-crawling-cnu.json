{"pageProps":{"post":{"slug":"2019-02-26-Python-crawling-cnu","content":"\n학과 홈페이지에 좋은 정보가 게시되는데 항상 학과 홈페이지에 접속하긴 번거로워서 알림 앱을 만들기 위한\n데이터 수집 및 저장용 크롤러를 제작하였다.\n\n#### Target\n충남대학교 컴퓨터융합학부(前 컴퓨터공학과) 공지사항 > 취업정보\n\n#### Used\n- Python 3.5.2\n- BeautifulSoup module\n- Firebase\n\n취업정보 게시판에 올라오는 글들\n![](/assets/posts/python/posting_data.png)\n\n```py\nimport requests\nimport re\nfrom bs4 import BeautifulSoup\nimport datetime\nfrom firebase import firebase\nimport threading\n\nfirebase = firebase.FirebaseApplication('https://***.firebaseio.com/', None)\n\ndef get_job_post():\n\tprint(\"[+] parser is running...\\n\")\n\turl = \"http://computer.cnu.ac.kr/index.php?mid=job\"\n\trequest = requests.get(url)\n\n\thtml = request.text\n\tsoup = BeautifulSoup(html,\"html.parser\")\n\n\ttable = soup.find(\"tbody\")\n\n\t#title_data = []\n\t#time_data = []\n\t# 타이틀만 가져옴\n\t#for t in table.find_all(\"a\"):\n\t#\ttext_data = t.get_text().replace(\"\\t\",\"\")\n\t#\tfor i in text_data.split(\"\\n\"):\n\t#\t\tif i is not \"\":\n\t#\t\t\ttitle_data.append(i)\n\t\n\t# 시간만 가져옴\n\t#for t in table.find_all(\"td\",[\"time\"]):\n\t#\ttext_data = t.get_text()\n\t#\tfor i in text_data.split(\"\\n\"):\n\t#\t\tif i is not \"\":\n\t#\t\t\ttime_data.append(i)\n\n\t# time/title 태그 파싱\n\tparse_data = []\n\tfor t in table.find_all(\"td\",[\"title\",\"time\"]):\n\t\ttext_data = t.get_text().replace(\"\\t\",\"\")\n\t\tfor i in text_data.split(\"\\n\"):\n\t\t\tif i is not \"\":\n\t\t\t\tparse_data.append(i)\n\n\t# time/title key 딕셔너리 생성 후 리스트에 넣음\n\tresult = []\n\tdic_data = {}\n\tfor i in range(0,len(parse_data)):\n\t\tregex = re.compile(r\"([12]\\d{3}.(0[1-9]|1[0-2]).(0[1-9]|[12]\\d|3[01]))\") # YYYY.mm.dd 포맷 정규식\n\t\tm = regex.match(parse_data[i])\n\t\tif m: # 날짜 포맷과 일치할 경우 time(key)에 value 저장\n\t\t\tdic_data[\"time\"] = m.group()\n\t\telse: # 일치하지 않을 경우title(key)에 value 저장\n\t\t\tdic_data[\"title\"] = parse_data[i]\n\n\t\tif len(dic_data) == 2: # time/title 딕셔너리가 완성되면 result에 저장 후 딕셔너리 초기화\n\t\t\tresult.append(dic_data)\n\t\t\tdic_data = {}\n\n\tfor i in range(0,len(result)): # Firebase database에 저장\n\t\ttry:\n\t\t\tfirebase.patch(\"/\"+str(i),result[i]) \n\t\texcept:\n\t\t\tprint(\"[-] Update Error\\n\")\n\tprint(\"[+] Update completed\\n\")\n\n\tthreading.Timer(600,get_job_post).start() # 10분마다 반복\n\ndef main():\n\tget_job_post()\n\nif __name__ == \"__main__\":\n\tmain()\n```\n\n\nFirebase database에 잘 저장되고 있다 :)\n![](/assets/posts/python/parsing_data.png)\n","layout":"post","title":"[Python] 학과 홈페이지 크롤링","categories":["Python"],"excerpt":" ","comments":true,"share":true,"tags":["Python","BeautifulSoup","crawling"]}},"__N_SSG":true}