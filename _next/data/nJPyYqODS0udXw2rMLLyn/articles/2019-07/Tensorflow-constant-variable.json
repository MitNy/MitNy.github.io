{"pageProps":{"post":{"slug":"2019-07-11-Tensorflow-constant-variable","content":"\n\n### constant\n텐서플로우에서 상수를 생성해줄 때 사용\n\n```\ntest = tf.constant(\"TEST\")\nprint(test)\n\nsess = tf.Session()\nprint(sess.run(test))\n```\n위와 같이 원하는 값을 생성해줄 수 있다. <br>\n하지만 일반적인 언어의 변수 선언과는 다르게 바로 사용하면 생성해준 값을 얻을 수 없다.\n\n![](/assets/posts/tensorflow/tf_constant.png)\n\n위 코드를 실행한 결과로, 단순히 생성 후 `print(test)`를 해주게 되면 텐서의 타입 등이 출력된다.<br>\nshape이 ()이면 상수 텐서라는 의미이다.<br>\nTEST 문자열을 얻고 싶다면 그래프를 실행할 Session을 만들어주어야 한다. <br>\nSession 생성 후 실행하고자 하는 텐서 그래프(변수, 수식 등)를 run 함수로 실행시키면 된다.<br>\n\n-------------------------------------------------------------------------------------------------------\n### placeholder\n계산할 때 입력을 받는 변수를 생성해줄 때 사용\n\n```\nX_1 = tf.placeholder(tf.float32, [2,2])\nX_2 = tf.placeholder(tf.float32, [None,2])\nprint(X_1)\nprint(X_2)\n```\n![](/assets/posts/tensorflow/tf_placeholder.png)\n\nX_1은 실수형 텐서의 구조가 2차원 행렬 [2][2]의 구조를 가지고,<br>\nX_2는 실수형 텐서의 구조가 2차원 행렬 [?][2]의 구조를 가진다.<br>\nNone은 크기가 정해져있지 않을 때 사용한다.<br>\n\nmatmul 등의 함수로 행렬을 계산해줄 수 있다.<br>\n\n```\nX_3 = tf.placeholder(tf.float32, [2,4])\nx3_data = [[1,2,3,4],[4,3,2,1]]\n\nW_1 = tf.placeholder(tf.float32, [4,2])\nw1_data = [[0,1],[1,2],[2,3],[3,4]]\n\nexp = tf.matmul(X_3, W_1)\nsession = tf.Session()\nsession.run(tf.global_variables_initializer())\n\nprint(session.run(exp, feed_dict={X_3:x3_data, W_1:w1_data}))\n\nsession.close()\n```\n\n![](/assets/posts/tensorflow/tf_placeholder_mul.png)\n\n`global_variables_initializer()`는 변수를 초기화해주는 함수이며, 초기화된 결과를 세션에 전달해주어야 한다.<br>\n\n위에서 constant를 `session.run(상수명)` 이렇게 출력해줬다면<br>\nplaceholder는 계산할 수식을 정해두고 `feed_dict`를 이용해 값을 각 placeholder에 넣어줘야 한다.<br>\n위 코드의 경우 X_3에는 x3_data의 값이, W_1에는 w1_data의 값이 들어가는 것이다.<br>\n\n----------------------------------------------------------------------------------------------------------\n### Variable\n\n값이 계속 변하는 변수를 생성해줄 때 사용\n\n```\nX_4 = tf.placeholder(tf.float32, [2,2])\nx4_data = [[4,5],[7,8]]\n\nW_2 = tf.Variable(tf.random_normal([2,2]))\n\nexp = tf.matmul(X_4, W_2)\nsession = tf.Session()\nsession.run(tf.global_variables_initializer())\n\nprint(session.run(W_2))\nprint(session.run(exp, feed_dict={X_4: x4_data}))\nsession.close()\n```\n![](/assets/posts/tensorflow/tf_variable.png)\n\nplaceholder와 같이 응용하여 X_4는 [2][2] 행렬,<br>\nVariable을 사용할 W_2도 마찬가지로 [2][2] 행렬이다.<br>\nW_2의 값은 0과 1 사이의 정규분포 값으로 랜덤하게 생성된다. <br>\n\n\n\n\n","layout":"post","title":"[TensorFlow] TensorFlow 상수와 변수","categories":["TensorFlow"],"excerpt":" ","comments":true,"share":true,"tags":["TensorFlow"]}},"__N_SSG":true}