{"pageProps":{"post":{"slug":"2018-11-15-PhilipsHue-control","content":"\nPhilips Hue란 인터넷으로 제어할 수 있는 전구이다.<br>\n앱도 있어서 브릿지만 연결되어 있다면 범위 내에서 밝기, 색상, 전원 등을 컨트롤 할 수 있다.<br>\nPhilips Hue 1.0 스타터 킷을 사용했다.\n\n![](/assets/posts/iot/hue.png)\n\n### 환경\n1. Ubuntu 16.04 LTS 와 Raspbian Stretch with desktop\n2. Raspberry Pi 3\n\n### 작동 원리\n![](/assets/posts/iot/hueWork.png)\n\n앱으로 Hue를 컨트롤 할 수도 있지만 컴퓨터로 제어 해볼 것이다.<br>\n그렇다고 앱을 안깔아도 되는 것은 아니다!<br>\n공유기와 연결한 브릿지를 앱에서 검색하면 Bridge IP를 확인할 수 있는데, 이 IP가 있어야만 컨트롤 할 수 있다.\n\n### Python phue 모듈 설치\n`sudo pip3 install phue`\n[https://github.com/studioimaginaire/phue](https://github.com/studioimaginaire/phue)\n\n### 전원 제어\n`lights[hue 전구 인덱스].on/off = True/False`\n\n```py\nfrom phue import Bridge\n\nb = Bridge(\"Bridge IP\")\nb.connect()\n\nlights = b.lights\nprint(lights)\n\nfor i in range(0,len(lights)):\n\tif i==0:\n\t\tlights[i].on = True\n\telif i==1:\n\t\tlights[i].on = False\n\telif i==2:\n\t\tlights[i].on = True\n```\n\n### 밝기 제어\n`lights[hue 전구 인덱스].brightness = 0~254` 숫자가 커질 수록 밝아진다\n\n```py\nfrom phue import Bridge\n\nb = Bridge(\"Bridge IP\")\nb.connect()\n\nlights = b.lights\nprint(lights)\nfor i in range(0,len(lights)):\n\tif i==0:\n\t\tlights[i].brightness=0\n\telif i==1:\n\t\tlights[i].brightness=100\n\telif i==2:\n\t\tlights[i].brightness=254\n```\n\n### 색상 제어\n`lights[hue 전구 인덱스].xy = [0~1,0~1]`\n```py\nfrom phue import Bridge\n\nb = Bridge(\"Bridge IP\")\nb.connect()\n\nlights = b.lights\nprint(lights)\nfor i in range(0,len(lights)):\n\tif i==0:\n\t\tlights[i].xy = [0.1,0.1]\n\telif i==1:\n\t\tlights[i].xy = [0.5,1]\n\telif i==2:\n\t\tlights[i].xy = [0.7,0.3]\n```\n\n### 세 가지 제어를 웹 페이지에서 하기\n전구의 전원, 밝기, 색상을 동시에 제어할 수 있는\n[제어 페이지](https://mitny.github.io/demo/hue/hue_controller.html) 도 만들었다.\nform의 httpServer.py는 따로 업로드 하지 않고\nhttpServer.py에서 hueController 함수 부분만 따왔다.\n\n```py\ndef hueController(hueNum,power,brightness,x,y):\n\t# bridge ip\n\tb = Bridge(\"Bridge IP\")\n\tb.connect()\n\tlights = b.lights\n\tif power == \"off\":\n\t\tlights[int(hueNum)].on = False\n\telif power == \"on\":\n\t\tlights[int(hueNum)].on = True\n\t\tif brightness is not \"\":\n\t\t\tlights[int(hueNum)].brightness = int(brightness)\n\t\tif x is not \"\" and y is not \"\":\n\t\t\tlights[int(hueNum)].xy = [float(x),float(y)]\n\telse:\n\t\treturn;\n```\n\n\n### 데모 영상\n<iframe width=\"786\" height=\"442\" src=\"https://www.youtube.com/embed/tI9AQxtTa1Q\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n","layout":"post","title":"[IoT] Philips Hue Control","categories":["IoT"],"excerpt":" ","comments":true,"share":true,"tags":["IoT","Philips Hue"]}},"__N_SSG":true}