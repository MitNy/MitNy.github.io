{"pageProps":{"post":{"slug":"2018-07-19-kubernetes-install-join","content":"\n## How to install and node join Kubernetes\n### 환경: Ubuntu 16.04 LTS\n\n1. master로 쓸 VM 하나와 node로 쓸 VM 하나를 준비한다.\n2. 아래의 설치 과정을 동일하게 진행한다.\n\n### hostname 변경하는 방법\n```\n1. vi /etc/hosts 에서 변경\n2. hostnamectl set-hostname 호스트네임\n\n확인: $ hostname\n```\n\n도커는 설치되어 있다는 전제하에 포스팅합니다!\n\n`swapoff -a`\n\n### Kubernetes 설치\n```\nsudo apt-get update && apt-get install -y apt-transport-https curl\ncurl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add –\ncat <<EOF >/etc/apt/sources.list.d/kubernetes.list\ndeb http://apt.kubernetes.io/ kubernetes-xenial main\nEOF\nsudo apt-get update\nsudo apt-get install kubelet kubeadm kubectl\n```\n\n`docker info | grep -i cgroup`\n\n`sudo vi /etc/systemd/system/kubelet.service.d/10-kubeadm.conf`\n-> Environment=\"KUBELET_CGROUP_ARGS=--cgroup-driver=cgroupfs\" 추가\n![](/assets/posts/kubernetes/kube_conf.png)\n\n`sed -i \"s/cgroup-driver=systemd/cgroup-driver=cgroupfs/g\" /etc/systemd/system/kubelet.service.d/10-kubeadm.conf`\n\n\n아래 과정부터는 master와 node가 구분된다.\n## master\n### master 초기화\n`kubeadm init`\n\nkubeadm init 시 아래와 같은 에러가 발생할 수도 있다.\n```\n[preflight] Some fatal errors occurred:\n\t[ERROR ImagePull]: failed to pull image [k8s.gcr.io/kube-apiserver-amd64:v1.11.1]: exit status 1\n\t[ERROR ImagePull]: failed to pull image [k8s.gcr.io/kube-controller-manager-amd64:v1.11.1]: exit status 1\n\t[ERROR ImagePull]: failed to pull image [k8s.gcr.io/kube-scheduler-amd64:v1.11.1]: exit status 1\n\t[ERROR ImagePull]: failed to pull image [k8s.gcr.io/kube-proxy-amd64:v1.11.1]: exit status 1\n```\n\n![](/assets/posts/kubernetes/kube_version_error.png)\n\n버전과 관련된 에러이기 때문에 `kubeadm init --kubernetes-version=1.11.0` 이렇게 버전 옵션을 따로 줘서 해결할 수 있다.\n\n초기화가 정상적으로 됐다면 아래와 같은 화면을 볼 수 있다.\n![](/assets/posts/kubernetes/kube_init.png)\n\nroot가 아닌 regular user로 아래 명령어들을 입력해주면 된다. regular user로 돌아가고 싶다면 `su (username)`\n\n```\nmkdir -p $HOME/.kube\nsudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\nsudo chown $(id -u):$(id -g) $HOME/.kube/config\n```\n\n네트워크 배포도 필요한데 [https://kubernetes.io/docs/concepts/cluster-administration/addons/](https://kubernetes.io/docs/concepts/cluster-administration/addons/) 이 곳에서 원하는 네트워크를 선택해 `kubectl apply -f [podnetwork].yaml` 명령어를 입력해주면 된다.\n네트워크들에 대한 설명은 써있는데 무슨 차인지는 더 공부해봐야 될 것 같다..\n\ncalico 네트워크 배포\n![](/assets/posts/kubernetes/kube_calico.png)\n\n\nnode가 master로 join하기 위한 명령어도 주어진다. 이 명령어는 node에서 사용하는 것이다.\n\njoin 전에는 master만 존재한다.\n![](/assets/posts/kubernetes/kube_join_before.png)\n\n## node\n설치와 설정이 완료된 node 서버에서 join 명령어를 입력해준다.\n![](/assets/posts/kubernetes/kube_join.png)\n\njoin이 성공적으로 되면 master 서버에서 `kubectl get nodes` 명령어로 join된 node들을 볼 수 있다.\n\n![](/assets/posts/kubernetes/kube_join_done.png)\n\n","layout":"post","title":"[Kubernetes] Kubernetes 설치부터 노드 join까지","categories":["Kubernetes"],"excerpt":" ","comments":true,"share":true,"tags":["Kubernetes","Ubuntu","install","join"]}},"__N_SSG":true}