{"pageProps":{"post":{"slug":"2017-08-23-pwnable-collision","content":"\n![](/assets/posts/pwnkr/collision.png)\n\npwnable.kr 의 두번째 문제 col은 **Daddy told me about cool MD5 hash collision today. I wanna do something like that too!**\n\n```\ncol@ubuntu:~$ ls -l\n\ntotal 16\n\n-r-sr-x--- 1 col_pwn col     7341 Jun 11  2014 col\n\n-rw-r--r-- 1 root    root     555 Jun 12  2014 col.c\n\n-r--r----- 1 col_pwn col_pwn   52 Jun 11  2014 flag\n\n```\n\nfd 문제와 마찬가지로 실행가능한 파일, 읽기 가능한 파일, flag 파일이 있다.\n우선 col 파일을 실행시켜보면 ./col [passcode] 이런식으로 입력하라고 알려준다.\n\n```\ncol@ubuntu:~$ ./col 123\npasscode length should be 20 bytes\ncol@ubuntu:~$ ./col 11111111111111111111\nwrong passcode.\n```\n\ncol 파일의 코드를 보자.\n\n```c\n#include <stdio.h>\n#include <string.h>\n\nunsigned long hashcode = 0x21DD09EC;\nunsigned long check_password(const char* p){\n        int* ip = (int*)p;\n        int i;\n        int res=0;\n        for(i=0; i<5; i++){\n                res += ip[i];\n        }\n        return res;\n}\n\nint main(int argc, char* argv[]){\n        if(argc<2){\n                printf(\"usage : %s [passcode]\\n\", argv[0]);\n                return 0;\n        }\n        if(strlen(argv[1]) != 20){\n                printf(\"passcode length should be 20 bytes\\n\");\n                return 0;\n        }\n        if(hashcode == check_password( argv[1] )){\n                system(\"/bin/cat flag\");\n                return 0;\n        }\n        else\n                printf(\"wrong passcode.\\n\");\n        return 0;\n}\n```\n\n인자가 2보다 적을때 처음실행시켰을 때처럼 usage : ./col [passcode] 라는 메시지가 뜨고 종료된다.\n또, strlen 함수를 통해 argv[1]의 길이가 20 과 일치하지 않으면 passcode length should be 20 bytes 라는 메시지를 출력하고 종료한다.\n\nhashcode가 argv[1] 값을 check_password에 집어넣었을 때 리턴되는 값과 일치할 때,flag 파일이 실행된다.\n\n```\nunsigned long hashcode = 0x21DD09EC;\nunsigned long check_password(const char* p){\n        int* ip = (int*)p;\n        int i;\n        int res=0;\n        for(i=0; i<5; i++){\n                res += ip[i];\n        }\n        return res;\n}\n```\n\n이 부분을 보면 포인터 변수 ip는 check_password로 넘어온 argv[1] 값이 되고,\nfor 문을 통해 ip를 4바이트씩 나눠 5번 res에 더한다.\n결과적으로 res가 0x21DD09EC 이 되야 한다.\n0x21DD09EC 를 5번 나누면 0x6C5CEC8 이 되고, \n0x21DD09EC - ( 0x6C5CEC8 * 5 ) = 4 가 된다.\n4바이트가 남기 때문에 0x6C5CEC8 * 4 + 0x6C5CECC( 0x6C5CEC8 + 4byte ) 를 입력해줘야 한다.\n\npython을 사용해 입력할건데, 리틀엔디안이므로 거꾸로 입력해줘야 한다.\n\ncol@ubuntu:~$ ./col `python -c 'print \"\\xc8\\xce\\xc5\\x06\"*4+\"\\xcc\\xce\\xc5\\x06\"'`\n\n![](/assets/posts/pwnkr/collision_flag.png)\n\ndaddy! I just managed to create a hash collision :)\n","layout":"post","title":"[Pwnable.kr] collision","categories":["Pwnable.kr"],"excerpt":" ","comments":true,"share":true,"tags":["Pwnable.kr","collision"]}},"__N_SSG":true}